/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
#include "Stm32f103x6.h"
#include "Stm32F103C6_EXTI_Driver.h"
#include "Stm32f103C6_Driver_USART.h"
#include "Stm32f103C6_Driver_gpio.h"
#include "Lcd.h"
void Enable_Clock(){
	ENABLE_CLOCK_GPIOA();
	ENABLE_CLOCK_GPIOB();
	ENABLE_CLOCK_AFIO();
}
uint8 ch;
void UART_IRQ_CallBack(void){
	MCAL_USART_ReceiveData(USART1, &ch, Enable);

}
int main(void)
{
	/*
	USART_Word_Length Length;
	USART_Stop_Bits   Stop;
	USART_Mode 		  Mode;
	USART_Baud_Rate	  Baud_Rate;
	Interrupt_Status Interrupt;
	uint8			Interrupt_Type; //@ref interrupt type enable
	USART_Parity		Parity;
	USART_FLOW_CONTROL	HW_Flow;
	void (* P_CallBack) (void);
	*/
	Enable_Clock();
	USART_Pin_Config USART_Config={Eight_Bit,One_Bit,Both,Baud_Rate_115200,Enable,Interrupt_RXNEIE_Enable,none,NONE,UART_IRQ_CallBack};
	MCAL_USART_Init(USART1, &USART_Config);
	MCAL_USART_GPIO_Set_Pins(USART1);
	while(1){
 		MCAL_USART_Send_Data(USART1, &ch, Disable);

	}
}
