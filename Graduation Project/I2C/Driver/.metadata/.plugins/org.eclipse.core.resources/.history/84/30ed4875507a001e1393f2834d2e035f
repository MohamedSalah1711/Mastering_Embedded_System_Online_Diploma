/*
 * RCC_Sys_CLK.c
 *
 *  Created on: Nov 2, 2023
 *      Author: LEGION
 */

#include "RCC_Sys_CLK.h"
uint32	Get_SYS_CLK(void){
	/*Bits 3:2 SWS: System clock switch status
	Set and cleared by hardware to indicate which clock source is used as system clock.
	00: HSI oscillator used as system clock
	01: HSE oscillator used as system clock
	10: PLL used as system clock
	11: not applicable*/
	switch((RCC->RCC_CFGR>>2) &(0b11)){
	case 0:
		return HSI;
		break;
	case 1:
		return HSE;
		break;
	case 2:
		return PLL;
		break;
	default :
		return ERROR;
		break;
	}
}
uint32	Get_AHB_CLK(void){
	//Bits 7:4 HPRE: AHB prescaler

	return (Get_SYS_CLK() >> AHB_PRE_SCALER[((RCC->RCC_CFGR >> 4)& 0X0F)]);
}
uint32	Get_APB1_CLK(void){
	/*Bits 10:8 PPRE1: APB low-speed prescaler (APB1)
	Set and cleared by software to control the division factor of the APB low-speed clock
	(PCLK1).
	Warning: the software has to set correctly these bits to not exceed 36 MHz on this domain.
	0xx: HCLK not divided
	100: HCLK divided by 2
	101: HCLK divided by 4
	110: HCLK divided by 8
	111: HCLK divided by 16*/

	return (Get_AHB_CLK() >> APB_PRE_SCALER[((RCC->RCC_CFGR>>8) & 0b111)]  );
}
uint32	Get_APB2_CLK(void){

	return (Get_AHB_CLK() >> APB_PRE_SCALER[((RCC->RCC_CFGR >> 11) & 0b111)]);
}
