/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
#include "I2C_Slave_EEPROM.h"
#include "Stm32f103C6_Driver_gpio.h"
#include "Stm32f103C6_Driver_I2C.h"
#include "Stm32F103C6_EXTI_Driver.h"
#include "Stm32f103x6.h"
#include "Platform_Types.h"
void Enable_Clock(){
	ENABLE_CLOCK_GPIOA();
	ENABLE_CLOCK_GPIOB();
	ENABLE_CLOCK_AFIO();
}
int main(void)
{
	//Test case 1
	uint8 ch1[]={0x1,0x2,0x3,0x4,0x5,0x6,0x7};
	uint8 ch2[7]={0};
	EEPROM_init();
	EPPROM_write(0XAF, ch1, 7);
	EPPROM_READ(0XAF, ch2, 7);
	//Test case 2
	ch1[0]=0xa;
	ch1[1]=0xb;
	ch1[2]=0xc;
	ch1[3]=0xd;
	EPPROM_write(0XFFF, ch1, 4);
	EPPROM_READ(0XFFF, ch2, 4);
	while(1){

	}
}
