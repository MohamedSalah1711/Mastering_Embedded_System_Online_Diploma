/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
#define RCC_BASE 0x40021000
#define RCC_CR *((volatile unsigned int *)(RCC_BASE + 0x00))
#define RCC_CFGR *((volatile unsigned int *)(RCC_BASE + 0x04))
void clock_init (void){
	//Enable HSI (HSION)
	RCC_CR |= (1<<0);
	//SW mux from clock tree (select HSI as system clock)
	RCC_CFGR &=~ (1<<0);
	RCC_CFGR &=~ (1<<1);
	/*Bits 7:4 HPRE: AHB prescaler
	Set and cleared by software to control the division factor of the AHB clock.
	0xxx: SYSCLK not divided */
	RCC_CFGR &=~ (1<<7);
	/*Bits 10:8 PPRE1: APB low-speed prescaler (APB1)
	 * 100: HCLK divided by 2
	 * */
	RCC_CFGR |= (1<<10);
	/*Bits 13:11 PPRE2: APB high-speed prescaler (APB2)
	 * 101: HCLK divided by 4
	 * */
	RCC_CFGR |= (1<< 13);
}
int main(void)
{
	clock_init();
    /* Loop forever */
	for(;;);
}
